{"version":3,"sources":["components/SweetFactory.module.css","routes/Auth.module.css","routes/Profile.module.css","routes/Home.module.css","components/Navigation.module.css","components/AuthForm.module.css","components/Sweet.module.css","index.module.css","fbase.js","components/AuthForm.js","routes/Auth.js","components/Sweet.js","components/SweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","firebaseInstance","storageService","storage","AuthForm","useState","newAccount","error","setError","email","setEmail","password","setPassword","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","styles","authForm","type","placeholder","required","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","container","twitterIcon","icon","faTwitter","authContainer","authBtnContainer","loginGoogle","googleIcon","faGoogle","onClick","loginGithub","githubIcon","faGithub","Sweet","classNames","bind","sweetObj","isOwner","editing","setEditing","text","newSweet","setNewSweet","Date","createdAt","toLocaleString","writedDate","toggleSweetManage","setToggleSweetManage","toggleEditing","prev","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","update","sweet","writedSweet","maxLength","writedSweetContainer","sweetTop","writer","hide","displayName","date","imageWrapper","alt","src","ownerBtnContainer","ownerSweetManageBtn","manageBtn","active","ownerBtnBox","showBtn","disabled","SweetFactory","userObj","setSweet","attachment","setAttachment","lettersCount","setLettersCount","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","sweetObject","now","creatorId","collection","add","document","getElementById","sweetForm","accept-charset","sweetInput","length","sweetWriterWrapper","htmlFor","TweetLabelStyle","uploadIcon","faImage","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","rightSide","TweetBtnStyle","imagePreviewContainer","cancelBtn","faTimesCircle","width","height","Home","sweets","setSweets","AbortController","useEffect","onSnapshot","snapshot","sweetArray","docs","map","sort","b","sweetContainer","sweetContent","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","querySelector","focus","updateProfile","profileEditContainer","profileEditForm","logOutBtn","signOut","push","Navigation","navBar","to","link","AppRouter","exact","path","App","setUserObj","init","setInit","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","http-equiv","content","charset"],"mappings":"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","file":"static/js/main.74366f2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sweetForm\":\"SweetFactory_sweetForm__tZhG8\",\"sweetInput\":\"SweetFactory_sweetInput__1Ye0n\",\"TweetLabelStyle\":\"SweetFactory_TweetLabelStyle__lCsXz\",\"uploadIcon\":\"SweetFactory_uploadIcon__1kPki\",\"sweetWriterWrapper\":\"SweetFactory_sweetWriterWrapper__1FoNj\",\"rightSide\":\"SweetFactory_rightSide__1PVql\",\"TweetBtnStyle\":\"SweetFactory_TweetBtnStyle__keGgB\",\"imagePreviewContainer\":\"SweetFactory_imagePreviewContainer__3dkem\",\"cancelBtn\":\"SweetFactory_cancelBtn__nnTbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__2mFFO\",\"twitterIcon\":\"Auth_twitterIcon__1NI8a\",\"authContainer\":\"Auth_authContainer__1URqK\",\"authBtnContainer\":\"Auth_authBtnContainer__M30zw\",\"loginGoogle\":\"Auth_loginGoogle__2Vr_U\",\"loginGithub\":\"Auth_loginGithub__xCCWP\",\"googleIcon\":\"Auth_googleIcon__Kr34U\",\"githubIcon\":\"Auth_githubIcon__2O9PZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileEditContainer\":\"Profile_profileEditContainer__2CNGp\",\"profileEditForm\":\"Profile_profileEditForm__1MneZ\",\"TweetBtnStyle\":\"Profile_TweetBtnStyle__3e9EZ\",\"logOutBtn\":\"Profile_logOutBtn__1K9bx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sweetContainer\":\"Home_sweetContainer__1DLSx\",\"sweetContent\":\"Home_sweetContent__ts2r7\",\"twitterIcon\":\"Home_twitterIcon__LqvyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"Navigation_navBar__pub4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authForm\":\"AuthForm_authForm__19kRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"writedSweet\":\"Sweet_writedSweet__1QkZZ\",\"writedSweetContainer\":\"Sweet_writedSweetContainer__1qOun\",\"sweet\":\"Sweet_sweet__16jDK\",\"sweetTop\":\"Sweet_sweetTop__1ZtEU\",\"imageWrapper\":\"Sweet_imageWrapper__3XmlL\",\"hide\":\"Sweet_hide__3BlMM\",\"manageBtn\":\"Sweet_manageBtn__10YcB\",\"ownerBtnBox\":\"Sweet_ownerBtnBox__2N4nN\",\"writer\":\"Sweet_writer__16g2w\",\"date\":\"Sweet_date__2ewCR\",\"ownerBtnContainer\":\"Sweet_ownerBtnContainer__3slG3\",\"ownerSweetManageBtn\":\"Sweet_ownerSweetManageBtn__2zb87\",\"showBtn\":\"Sweet_showBtn__1Tsbd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"src_root__3TmMh\"};","import firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId:process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const firebaseInstance = firebase;\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport { React, useState } from \"react\";\nimport styles from './AuthForm.module.css';\n\n\nconst AuthForm = () => {\n  const [newAccount, setNewAccount] = useState(true);\n\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n      console.log(error);\n    }\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit} className={styles.authForm}>\n        <input\n          onChange={onChange}\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n        ></input>\n        <input\n          onChange={onChange}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n        ></input>\n        <input\n          type=\"submit\"\n          value={\"Create Account\"}\n        ></input>\n        {error}\n      </form>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport { React, useState } from \"react\";\nimport styles from \"./Auth.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (e) => {\n    let provider;\n    if (e.target.name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (e.target.name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    try {\n      await authService.signInWithPopup(provider);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  return (\n    <div className={styles.container}>\n      <FontAwesomeIcon className={styles.twitterIcon} icon={faTwitter} />\n      <div className={styles.authContainer}>\n        <AuthForm />\n\n        <div className={styles.authBtnContainer}>\n          \n          <div className={styles.loginGoogle}>\n            <FontAwesomeIcon\n              name=\"google\"\n              className={styles.googleIcon}\n              icon={faGoogle}\n            />\n            <button name=\"google\" onClick={onSocialClick}>\n              Continue with Google\n            </button>\n          </div>\n\n          <div className={styles.loginGithub}>\n            <FontAwesomeIcon\n              name=\"github\"\n              className={styles.githubIcon}\n              icon={faGithub}\n            />\n            <button name=\"github\" onClick={onSocialClick}>\n              Continue with Github\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport { React, useState } from \"react\";\nimport styles from \"./Sweet.module.css\";\nimport classNames from \"classnames/bind\";\n\nlet cx = classNames.bind(styles);\n\nconst Sweet = ({ sweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newSweet, setNewSweet] = useState(sweetObj.text);\n  const [writedDate, setWritedDate] = useState(\n    new Date(sweetObj.createdAt).toLocaleString()\n  );\n  const [toggleSweetManage, setToggleSweetManage] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n    setToggleSweetManage(false);\n  };\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this sweet?\");\n    if (ok) {\n      //delete sweet, photo\n      //path of this data\n      await dbService.doc(`sweets/${sweetObj.id}`).delete();\n      // console.log(storageService.refFromURL(sweetObj.attachmentUrl));\n      if (sweetObj.attachmentUrl !== \"\")\n        await storageService.refFromURL(sweetObj.attachmentUrl).delete();\n    }\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await dbService.doc(`sweets/${sweetObj.id}`).update({\n      text: newSweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNewSweet(value);\n  };\n\n  const onOpenManageBox = (e) => {\n    setToggleSweetManage((prev) => !prev);\n  };\n\n  const onClickImage = (e) => {\n    console.log(\"click\");\n  };\n\n  return (\n    <div className={styles.sweet}>\n      {editing ? (\n        <div className={styles.writedSweet}>\n          <form onSubmit={onSubmit}>\n            <textarea\n              type=\"text\"\n              maxLength={120}\n              placeholder=\"Edit your sweet\"\n              value={newSweet}\n              required\n              onChange={onChange}\n            ></textarea>\n            <button onClick={toggleEditing}>Cancel</button>\n            <button type=\"submit\">Update</button>\n          </form>\n        </div>\n      ) : (\n        <div className={styles.writedSweetContainer}>\n          <div className={classNames({ [styles.writedSweet]: true })}>\n            <div className={styles.sweetTop}>\n              <span\n                className={classNames({\n                  [styles.writer]: true,\n                  [styles.hide]: toggleSweetManage,\n                })}\n              >\n                {sweetObj.displayName}\n              </span>\n              <span\n                className={classNames({\n                  [styles.date]: true,\n                  [styles.hide]: toggleSweetManage,\n                })}\n              >\n                {writedDate}\n              </span>\n            </div>\n\n            <div\n              className={classNames({\n                [styles.imageWrapper]: true,\n                [styles.hide]: toggleSweetManage,\n              })}\n              onClick={onClickImage}\n            >\n              <span\n                className={classNames({\n                  [styles.sweet]: true,\n                })}\n              >\n                {sweetObj.text}\n              </span>\n              {sweetObj.attachmentUrl && (\n                <img alt=\"sweetImage\" src={sweetObj.attachmentUrl} />\n              )}\n            </div>\n\n            {isOwner && (\n              <>\n                <div\n                  className={classNames({\n                    [styles.ownerBtnContainer]: true,\n                    [styles.hide]: !toggleSweetManage,\n                  })}\n                >\n                  <button\n                    className={classNames(\n                      {\n                        [styles.ownerSweetManageBtn]: !toggleSweetManage,\n                        [styles.manageBtn]: true,\n                      },\n                      { active: toggleSweetManage }\n                    )}\n                    onClick={onOpenManageBox}\n                  >\n                    {!toggleSweetManage ? \"Manage\" : \"Close\"}\n                  </button>\n                </div>\n                <div\n                  className={classNames({\n                    [styles.ownerBtnBox]: true,\n                    [styles.hide]: !toggleSweetManage,\n                  })}\n                >\n                  <button\n                    className={classNames({\n                      [styles.showBtn]: toggleSweetManage,\n                      [styles.hide]: !toggleSweetManage,\n                    })}\n                    disabled={!toggleSweetManage}\n                    onClick={onDeleteClick}\n                  >\n                    Delete sweet\n                  </button>\n                  <button\n                    className={classNames({\n                      [styles.showBtn]: toggleSweetManage,\n                      [styles.hide]: !toggleSweetManage,\n                    })}\n                    disabled={!toggleSweetManage}\n                    onClick={toggleEditing}\n                  >\n                    Edit sweet\n                  </button>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Sweet;\n","import { React, useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./SweetFactory.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SweetFactory = ({ userObj }) => {\n  const [sweet, setSweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const [lettersCount, setLettersCount] = useState(0);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await fileRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const sweetObject = {\n      text: sweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n      displayName: userObj.displayName,\n    };\n    await dbService.collection(\"sweets\").add(sweetObject);\n    setSweet(\"\");\n    setAttachment(\"\");\n    setLettersCount(0);\n    document.getElementById(\"file-upload\").value = \"\";\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setLettersCount(value.length);\n    setSweet(value);\n  };\n\n  const onFileChagne = (e) => {\n    //e.target.files\n    const files = e.target.files;\n    const theFile = files[0];\n    const reader = new FileReader(); // file API\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent; //  result === finishedEvent.currentTarget.result\n      setAttachment(result);\n    }; // when file onloaded. parameter has URL of the image\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n    document.getElementById(\"file-upload\").value = \"\";\n  };\n  return (\n    <form onSubmit={onSubmit} className={styles.sweetForm} accept-charset=\"utf-8\">\n      <input\n        value={sweet}\n        type=\"text\"\n        maxLength={120}\n        placeholder=\"What's on your mind?\"\n        className={styles.sweetInput}\n        required\n        onChange={onChange}\n      ></input>\n      <div className={styles.sweetWriterWrapper}>\n        <label htmlFor=\"file-upload\" className={styles.TweetLabelStyle}>\n          <FontAwesomeIcon className={styles.uploadIcon} icon={faImage} />\n          Picture\n          <input\n            id=\"file-upload\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileChagne}\n          ></input>\n        </label>\n\n        <div className={styles.rightSide}>\n          <span>{lettersCount}/120</span>\n          <input\n            className={styles.TweetBtnStyle}\n            type=\"submit\"\n            value=\"Sweet\"\n          ></input>\n        </div>\n      </div>\n      {attachment && (\n        <div className={styles.imagePreviewContainer}>\n          <FontAwesomeIcon\n            id=\"uploadCancelBtn\"\n            className={styles.cancelBtn}\n            onClick={onClearAttachment}\n            icon={faTimesCircle}\n          />\n\n          <img src={attachment} width=\"125px\" height=\"125px\" />\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default SweetFactory;\n","import { dbService, storageService } from \"fbase\";\nimport { React, useState, useEffect } from \"react\";\nimport Sweet from \"components/Sweet\";\nimport SweetFactory from \"components/SweetFactory\";\nimport styles from \"./Home.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Home = ({ userObj }) => {\n  const [sweets, setSweets] = useState([]);\n  const abortController = new AbortController();\n\n  useEffect(() => {\n    const getData = dbService.collection(\"sweets\").onSnapshot((snapshot) => {\n      let sweetArray = snapshot.docs\n        .map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }))\n        .sort((a, b) => b.createdAt - a.createdAt);\n      setSweets(sweetArray);\n    });\n    return getData; //async 구독 문제 해결\n  }, []);\n\n  return (\n    <div className={styles.sweetContainer}>\n      <FontAwesomeIcon className={styles.twitterIcon} icon={faTwitter} />\n      <SweetFactory userObj={userObj} />\n      <div className={styles.sweetContent}>\n        {sweets.map((sweet) => (\n          <Sweet\n            key={sweet.id}\n            sweetObj={sweet}\n            isOwner={sweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { authService, dbService } from \"fbase\";\nimport { React, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styles from \"./Profile.module.css\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMySweets = async () => {\n    //get user's all datas in collections\n    const sweets = await dbService\n      .collection(\"sweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\", \"asc\") //정렬, => 인덱스생성\n      .get();\n  };\n  useEffect(() => {\n    document.querySelector('#editInput').focus();\n  }, []);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n    }\n    refreshUser();\n  };\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNewDisplayName(value);\n  };\n  return (\n    <div className={styles.profileEditContainer}>\n      <span>Hello,{userObj.displayName}!</span>\n      <form onSubmit={onSubmit}\n      className={styles.profileEditForm}>\n        <input\n          id=\"editInput\"\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n        />\n        <input className={styles.TweetBtnStyle} type=\"submit\" value=\"Update Profile\" />\n        <button className={styles.logOutBtn} onClick={onLogOutClick}>Log out</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { React } from 'react';\nimport {Link} from 'react-router-dom';\nimport styles from './Navigation.module.css';\n\n\nconst Navigation = ( {userObj} ) => {\n  return (\n    <nav className={styles.navBar}>\n      <ul>\n        <li><Link to=\"/\" className={styles.link}>Home</Link></li>\n        <li><Link to=\"/profile\"className={styles.link}>{userObj.displayName}'s Profile</Link></li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navigation;","import { React, useState } from \"react\";\nimport Auth from \"../routes/Auth\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\n\nconst AppRouter = ({ userObj, refreshUser }) => {\n  return (\n    <Router>\n      {userObj && <Navigation userObj={userObj} />}\n      <Switch>\n        {userObj ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={refreshUser} userObj={userObj} />\n            </Route>\n          </>\n        ) : (\n          <>\n            <Auth />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import AppRouter from \"components/Router\";\nimport { React, useState, useEffect } from \"react\";\nimport { authService } from \"fbase\";\nimport \"./App.module.css\";\n\nfunction App() {\n  const [userObj, setUserObj] = useState(null);\n  const [init, setInit] = useState(false);\n  const abortController = new AbortController();\n\n  useEffect(() => {\n    //유저 상태를 추적하는 이벤트리스너를 마운트될 때 등록. 변경되면 콜백 수행\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName || user.email,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args), //진짜 func을 사용하기 위한 중간 func\n        }); // 크기가 너무 커지면 느려질 수도 있음. 쓰는 것만 사용하자, {}로 아예 새로운 객체를 생성해 re-render할 수 있도록함.\n      } else {\n        // setIsLoggedIn(false);\n        setUserObj(null); // log out\n      }\n      setInit(true);\n      return user;\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter refreshUser={refreshUser} userObj={userObj} />\n      ) : (\n        \"Initialized...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Switter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"index.module.css\";\nimport MetaTags from \"react-meta-tags\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <MetaTags>\n      <title>Switter</title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n      <meta charset=\"UTF-8\" />\n    </MetaTags>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}